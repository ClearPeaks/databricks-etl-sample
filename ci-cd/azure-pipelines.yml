trigger:
  branches:
    include:
      # - dev
      # - pre
      - prod

variables:
  group: databricks-multienv-poc
  DATABRICKS_INSTANCES_DEV: 'https://adb-554199305656512.12.azuredatabricks.net'
  DATABRICKS_INSTANCES_PRE: 'https://adb-663046516257182.2.azuredatabricks.net'
  DATABRICKS_INSTANCES_PROD: 'https://adb-4429969223117054.14.azuredatabricks.net'

  REPO_PATH: '/Repos/GitHub/databricks-etl-sample'


stages:
- stage: Deploy
  displayName: 'Deploy to Databricks Environments'
  jobs:
    - job: DeployJob
      displayName: 'Deploy to Databricks'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            # Install Databricks CLI and jq
            sudo apt-get update
            sudo apt-get install -y jq
            pip install databricks-cli
          displayName: 'Install Databricks CLI and jq'

        - checkout: self

        - script: |
            # Print current branch details for debugging
            echo "Current source branch: ${BUILD_SOURCEBRANCH}"
            echo "Source branch name: ${BUILD_SOURCEBRANCHNAME}"

            # Set the correct Databricks host based on the branch
            if [[ "${BUILD_SOURCEBRANCH}" == "refs/heads/dev" ]]; then
              echo "##vso[task.setvariable variable=DATABRICKS_HOST]${DATABRICKS_INSTANCES_DEV}"
            elif [[ "${BUILD_SOURCEBRANCH}" == "refs/heads/pre" ]]; then
              echo "##vso[task.setvariable variable=DATABRICKS_HOST]${DATABRICKS_INSTANCES_PRE}"
            elif [[ "${BUILD_SOURCEBRANCH}" == "refs/heads/prod" ]]; then
              echo "##vso[task.setvariable variable=DATABRICKS_HOST]${DATABRICKS_INSTANCES_PROD}"
            else
              echo "Unknown branch: ${BUILD_SOURCEBRANCH}. Setting default Databricks host."
              echo "##vso[task.setvariable variable=DATABRICKS_HOST]${DATABRICKS_INSTANCES_DEV}"
            fi
            echo "Databricks host set to: $(DATABRICKS_HOST)"
          displayName: 'Set Databricks Host'

        # Debugging step to check if branch and host are set properly
        - script: |
            echo "Current branch: ${BUILD_SOURCEBRANCH}"
            echo "Databricks host: $(DATABRICKS_HOST)"
          displayName: 'Debug Branch and Host'

        - script: |
            # Authenticate using the OAuth token for Databricks CLI
            echo "Authenticating Databricks CLI with host: $(DATABRICKS_HOST)"
            databricks configure --host $(DATABRICKS_HOST) --token $OAUTH_TOKEN 
          displayName: 'Configure Databricks CLI with OAuth Token'

        - script: |
            # Ensure DATABRICKS_HOST is exported correctly
            echo "Using Databricks host: $(DATABRICKS_HOST)"
            echo "Repo Path: ${REPO_PATH}"
            echo "Branch: ${BUILD_SOURCEBRANCHNAME}"
            
            databricks repos update --path ${REPO_PATH} --branch "${BUILD_SOURCEBRANCHNAME}"
          displayName: 'Update Databricks Git Folder'
      
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/dev'), eq(variables['Build.SourceBranch'], 'refs/heads/pre'), eq(variables['Build.SourceBranch'], 'refs/heads/prod')))
